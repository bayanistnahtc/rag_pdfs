from langchain_core.prompts import ChatPromptTemplate, PromptTemplate


# Template for rephrasing questions based on chat history
REPHRASE_QUESTION_TEMPLATE = """
Учитывая историю переписки и новый вопрос, переформулируй новый вопрос так, чтобы он был независимым.
Если история пуста или нерелевантна, верни исходный вопрос без изменений.

История переписки:
{chat_history}

Новый вопрос: {question}

Независимый вопрос:"""

REPHRASE_QUESTION_PROMPT = PromptTemplate.from_template(REPHRASE_QUESTION_TEMPLATE)


# Промпт для генерации финального ответа
ANSWER_GENERATION_TEMPLATE = """
Ты — ассистент технической поддержки компании ELEPS. Твоя задача — точно и по делу отвечать на вопросы инженеров, основываясь ИСКЛЮЧИТЕЛЬНО на предоставленном контексте из технической документации.

Правила:
1.  Отвечай только на основе приведенного ниже контекста. Не используй свои общие знания.
2.  Если контекст не содержит ответа, вежливо сообщи, что информация в базе знаний не найдена. Не придумывай ответ.
3.  Структурируй ответ: используй списки, выделение для лучшей читаемости.
4.  Всегда отвечай на русском языке.
5.  В конце каждого утверждения, взятого из источника, ОБЯЗАТЕЛЬНО ставь ссылку на источник.

Контекст из документации:
--------------------
{context}
--------------------

Вопрос пользователя: {question}

Развернутый и точный ответ со ссылками на источники:"""

ANSWER_GENERATION_PROMPT = ChatPromptTemplate.from_messages(
    [
        ("system", ANSWER_GENERATION_TEMPLATE),
        ("human", "{question}"),
    ]
)